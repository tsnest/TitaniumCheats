package ru.mchacked.titanium.api;

import net.minecraft.client.gui.FontRenderer;
import net.minecraft.nbt.NBTTagCompound;

public interface IAddon {
	
	/**
	 * Возвращает уникальный идентификатор аддона.
	 * Для избежания конфликтов рекомендуется указать ник автора в этом идентификаторе,
	 * например, "Alexey7410_PlayerHack".
	 */
	String getAddonID();
	
	/**
	 * Возвращает название аддона, как оно должно быть показано юзеру, в короткой форме.
	 * Пример - "Player hack".
	 * 
	 * Пока не используется.
	 */
	String getShortName();
	
	/**
	 * Возвращает полное название аддона. Пример - "Player hack by Alexey7410".
	 * 
	 * Пока не используется
	 */
	String getFullName();
	
	/**
	 * Вызывается при инициализации аддона.
	 * В принципе, то же самое можно сделать в конструкторе,
	 * но дабы не пугать народ, был введен этот метод.
	 */
	void initialize();
	
	/**
	 * Загружает настройки из тега.
	 * Аддон должен сам заботится о проверке наличия ключей в конфиге
	 * и подставления значений по дефолту, если они не найдены.
	 * Этот метод будет вызван, даже если тег полностью пустой.
	 */
	void loadConfig(NBTTagCompound tag);
	
	/**
	 * Записывает настройки в тег.
	 * ПРИМЕЧАНИЕ: Тег настроек отдельный для каждого аддона
	 * (собственно, для этого понадобился уникальный ID)
	 */
	void saveConfig(NBTTagCompound tag);
	
	void onInfoClick();
	
	/**
	 * Вызывается для рендера HUD'a.
	 * fr - объект FontRenderer
	 * width, height - размеры экрана
	 */
	void onHUDrender(FontRenderer fr, int width, int height);
	
	/**
	 * Вызывается для рендеринга всего остального.
	 * par0 - что это такое, я, если честно, не знаю, но для рендера оно очень важно.
	 * 
	 * UPD: nginx, почему то не добавил вызов этого метода :/
	 */
	void onWorldRender(float par0);
	
}
